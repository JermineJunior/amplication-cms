/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TeachersAttendee } from "@prisma/client";

export class TeachersAttendeeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.TeachersAttendeeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeCountArgs>
  ): Promise<number> {
    return this.prisma.teachersAttendee.count(args);
  }

  async teachersAttendees<T extends Prisma.TeachersAttendeeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeFindManyArgs>
  ): Promise<TeachersAttendee[]> {
    return this.prisma.teachersAttendee.findMany(args);
  }
  async teachersAttendee<T extends Prisma.TeachersAttendeeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeFindUniqueArgs>
  ): Promise<TeachersAttendee | null> {
    return this.prisma.teachersAttendee.findUnique(args);
  }
  async createTeachersAttendee<T extends Prisma.TeachersAttendeeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeCreateArgs>
  ): Promise<TeachersAttendee> {
    return this.prisma.teachersAttendee.create<T>(args);
  }
  async updateTeachersAttendee<T extends Prisma.TeachersAttendeeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeUpdateArgs>
  ): Promise<TeachersAttendee> {
    return this.prisma.teachersAttendee.update<T>(args);
  }
  async deleteTeachersAttendee<T extends Prisma.TeachersAttendeeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachersAttendeeDeleteArgs>
  ): Promise<TeachersAttendee> {
    return this.prisma.teachersAttendee.delete(args);
  }
}
