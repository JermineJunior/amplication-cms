/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Enterprise } from "@prisma/client";

export class EnterpriseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.EnterpriseCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseCountArgs>
  ): Promise<number> {
    return this.prisma.enterprise.count(args);
  }

  async enterprises<T extends Prisma.EnterpriseFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseFindManyArgs>
  ): Promise<Enterprise[]> {
    return this.prisma.enterprise.findMany(args);
  }
  async enterprise<T extends Prisma.EnterpriseFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseFindUniqueArgs>
  ): Promise<Enterprise | null> {
    return this.prisma.enterprise.findUnique(args);
  }
  async createEnterprise<T extends Prisma.EnterpriseCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseCreateArgs>
  ): Promise<Enterprise> {
    return this.prisma.enterprise.create<T>(args);
  }
  async updateEnterprise<T extends Prisma.EnterpriseUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseUpdateArgs>
  ): Promise<Enterprise> {
    return this.prisma.enterprise.update<T>(args);
  }
  async deleteEnterprise<T extends Prisma.EnterpriseDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EnterpriseDeleteArgs>
  ): Promise<Enterprise> {
    return this.prisma.enterprise.delete(args);
  }
}
