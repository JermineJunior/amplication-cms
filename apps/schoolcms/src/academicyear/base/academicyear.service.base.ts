/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Academicyear } from "@prisma/client";

export class AcademicyearServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AcademicyearCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearCountArgs>
  ): Promise<number> {
    return this.prisma.academicyear.count(args);
  }

  async academicyears<T extends Prisma.AcademicyearFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearFindManyArgs>
  ): Promise<Academicyear[]> {
    return this.prisma.academicyear.findMany(args);
  }
  async academicyear<T extends Prisma.AcademicyearFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearFindUniqueArgs>
  ): Promise<Academicyear | null> {
    return this.prisma.academicyear.findUnique(args);
  }
  async createAcademicyear<T extends Prisma.AcademicyearCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearCreateArgs>
  ): Promise<Academicyear> {
    return this.prisma.academicyear.create<T>(args);
  }
  async updateAcademicyear<T extends Prisma.AcademicyearUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearUpdateArgs>
  ): Promise<Academicyear> {
    return this.prisma.academicyear.update<T>(args);
  }
  async deleteAcademicyear<T extends Prisma.AcademicyearDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicyearDeleteArgs>
  ): Promise<Academicyear> {
    return this.prisma.academicyear.delete(args);
  }
}
