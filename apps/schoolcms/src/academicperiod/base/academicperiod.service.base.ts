/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Academicperiod } from "@prisma/client";

export class AcademicperiodServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AcademicperiodCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodCountArgs>
  ): Promise<number> {
    return this.prisma.academicperiod.count(args);
  }

  async academicperiods<T extends Prisma.AcademicperiodFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodFindManyArgs>
  ): Promise<Academicperiod[]> {
    return this.prisma.academicperiod.findMany(args);
  }
  async academicperiod<T extends Prisma.AcademicperiodFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodFindUniqueArgs>
  ): Promise<Academicperiod | null> {
    return this.prisma.academicperiod.findUnique(args);
  }
  async createAcademicperiod<T extends Prisma.AcademicperiodCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodCreateArgs>
  ): Promise<Academicperiod> {
    return this.prisma.academicperiod.create<T>(args);
  }
  async updateAcademicperiod<T extends Prisma.AcademicperiodUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodUpdateArgs>
  ): Promise<Academicperiod> {
    return this.prisma.academicperiod.update<T>(args);
  }
  async deleteAcademicperiod<T extends Prisma.AcademicperiodDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AcademicperiodDeleteArgs>
  ): Promise<Academicperiod> {
    return this.prisma.academicperiod.delete(args);
  }
}
